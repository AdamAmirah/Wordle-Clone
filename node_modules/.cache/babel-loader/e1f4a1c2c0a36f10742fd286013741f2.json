{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useWordle = solution => {\n  _s();\n\n  const [turn, setTurn] = useState(0);\n  const [currentGuess, setcurrentGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [isCorrect, setisCorrect] = useState(flase);\n\n  const formatGuess = () => {};\n\n  const addNewGuess = () => {};\n\n  const handleKeyUp = _ref => {\n    let {\n      key\n    } = _ref;\n    console.log(key);\n  };\n\n  return {\n    turn,\n    currentGuess,\n    guesses,\n    isCorrect,\n    handleKeyUp\n  };\n};\n\n_s(useWordle, \"ZybGYQR4YI+aDtJ066bhZKPdRmA=\");\n\nexport default useWordle;","map":{"version":3,"sources":["/home/baraa/github/React/wordle-game/src/hooks/useWordle.js"],"names":["useState","useWordle","solution","turn","setTurn","currentGuess","setcurrentGuess","guesses","setGuesses","history","setHistory","isCorrect","setisCorrect","flase","formatGuess","addNewGuess","handleKeyUp","key","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACa,KAAD,CAA1C;;AACA,QAAMC,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,QAAMC,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,QAAMC,WAAW,GAAG,QAAW;AAAA,QAAV;AAACC,MAAAA;AAAD,KAAU;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAFD;;AAIA,SAAO;AACLd,IAAAA,IADK;AAELE,IAAAA,YAFK;AAGLE,IAAAA,OAHK;AAILI,IAAAA,SAJK;AAKLK,IAAAA;AALK,GAAP;AAOD,CArBD;;GAAMf,S;;AAuBN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useWordle = (solution) => {\n  const [turn, setTurn] = useState(0);\n  const [currentGuess, setcurrentGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [isCorrect, setisCorrect] = useState(flase);\n  const formatGuess = () => {};\n\n  const addNewGuess = () => {};\n\n  const handleKeyUp = ({key}) => {\n    console.log(key)\n  };\n\n  return {\n    turn,\n    currentGuess,\n    guesses,\n    isCorrect,\n    handleKeyUp,\n  };\n};\n\nexport default useWordle;\n"]},"metadata":{},"sourceType":"module"}